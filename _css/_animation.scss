/*****************************************************************************
animations.scss

Helpers gestion des animations CSS
/******************************************************************************/


//variables
$shortSpeed : 0.5s;

//Est enlevé par javascript lorsque la page est chargée
//Permet de lancer les animations à ce moment
.js-Page-Loading *,
.js-Page-Loading *:before,
.js-Page-Loading *:after {
  animation-play-state: paused !important;
}


//Permet d'animer un fade-in sur la page par exemple
@keyframes fadeInAnimation {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@mixin quickFadeInAnimation {
    animation: fadeInAnimation ease $shortSpeed ;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
}


//Formule générique pour animer une transition sur propriété donnée
@mixin animateTransitionHover($property, $src, $dest) {
    #{$property}: $dest;
    transition: #{$property} $shortSpeed ease-in-out;

    &:hover {
        #{$property}: $src;
        transition: #{$property} $shortSpeed ease-in-out;
    }
}

//Raccourci pour uniformiser les fade-in fade-out d'éléments à travers le site
@mixin opacityFadeOnHover($opacity) {
   @include animateTransitionHover(opacity, $opacity, 1);
}

//Uniformisation des changements de couleur sur Hover
@mixin colorChangeOnHover($src, $dest) {
    @include animateTransitionHover(color, $dest, $src);  //src et dest inversés pour respecter logique de animateTransitionHover
 }


 //Fonction utilitaire qui change l'image en arrière plan
  @mixin bgImage($url) {
    background-image: url($url);
    background-repeat: no-repeat;
  //  background-attachment: fixed;
    background-size: cover;
    background-position: center, 540px;
}

//Slidein de la section Bio
 @keyframes FadeInBio {
    0% {
      transform: translateY(-10%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  } 


